// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Elabox/components/AppButton Active 1`] = `
<button
  aria-label={null}
  className="btn btn-primary btn-lg active"
  disabled={false}
  hi={true}
  isProcessing={false}
  onClick={[Function]}
>
  Primary
</button>
`;

exports[`Storyshots Elabox/components/AppButton Block 1`] = `
<button
  aria-label={null}
  className="btn btn-primary btn-lg btn-block"
  disabled={false}
  hi={true}
  isProcessing={false}
  onClick={[Function]}
>
  Block
</button>
`;

exports[`Storyshots Elabox/components/AppButton Close 1`] = `
<button
  aria-label="Close"
  className="close btn-lg"
  disabled={false}
  hi={true}
  isProcessing={false}
  onClick={[Function]}
>
  Primary
</button>
`;

exports[`Storyshots Elabox/components/AppButton Danger 1`] = `
<button
  aria-label={null}
  className="btn btn-danger btn-lg"
  disabled={false}
  hi={true}
  isProcessing={false}
  onClick={[Function]}
>
  Danger
</button>
`;

exports[`Storyshots Elabox/components/AppButton Disabled 1`] = `
<button
  aria-label={null}
  className="btn btn-primary btn-lg disabled"
  disabled={true}
  hi={true}
  isProcessing={false}
  onClick={[Function]}
>
  Disabled
</button>
`;

exports[`Storyshots Elabox/components/AppButton Info 1`] = `
<button
  aria-label={null}
  className="btn btn-info btn-lg"
  disabled={false}
  hi={true}
  isProcessing={false}
  onClick={[Function]}
>
  Info
</button>
`;

exports[`Storyshots Elabox/components/AppButton Outline 1`] = `
<button
  aria-label={null}
  className="btn btn-outline-primary btn-lg"
  disabled={false}
  hi={true}
  isProcessing={false}
  onClick={[Function]}
>
  Primary
</button>
`;

exports[`Storyshots Elabox/components/AppButton Primary 1`] = `
<button
  aria-label={null}
  className="btn btn-primary btn-lg"
  disabled={false}
  hi={true}
  isProcessing={false}
  onClick={[Function]}
>
  Primary
</button>
`;

exports[`Storyshots Elabox/components/AppButton Processing 1`] = `
<button
  aria-label={null}
  className="btn btn-primary btn-lg disabled"
  disabled={true}
  isProcessing={true}
  onClick={[Function]}
>
  <div
    className="spinner-border"
    role="status"
  >
    
  </div>
</button>
`;

exports[`Storyshots Elabox/components/AppButton Secondary 1`] = `
<button
  aria-label={null}
  className="btn btn-secondary btn-lg"
  disabled={false}
  hi={true}
  isProcessing={false}
  onClick={[Function]}
>
  Secondary
</button>
`;

exports[`Storyshots Elabox/components/AppButton Success 1`] = `
<button
  aria-label={null}
  className="btn btn-success btn-lg"
  disabled={false}
  hi={true}
  isProcessing={false}
  onClick={[Function]}
>
  Success
</button>
`;

exports[`Storyshots Elabox/components/AppIcon Download Error 1`] = `
<div
  style={
    Object {
      "height": "200px",
      "textAlign": "center",
      "width": "200px",
    }
  }
>
  <div
    style={
      Object {
        "border": "3px solid black",
        "borderRadius": "20px",
        "marginBottom": "10px",
        "padding": "20px",
        "position": "relative",
      }
    }
  >
    <img
      alt="Glide"
      src="images/glide.png"
      style={
        Object {
          "height": "100%",
          "width": "100%",
        }
      }
    />
  </div>
  <div
    className="progress"
    style={Object {}}
  >
    <div
      aria-valuemax={100}
      aria-valuemin={0}
      aria-valuenow={50}
      className="progress-bar progress-bar-animated bg-danger progress-bar-striped"
      role="progressbar"
      style={
        Object {
          "width": "50%",
        }
      }
    />
  </div>
</div>
`;

exports[`Storyshots Elabox/components/AppIcon Download Success 1`] = `
<div
  style={
    Object {
      "height": "200px",
      "textAlign": "center",
      "width": "200px",
    }
  }
>
  <div
    style={
      Object {
        "border": "3px solid black",
        "borderRadius": "20px",
        "marginBottom": "10px",
        "padding": "20px",
        "position": "relative",
      }
    }
  >
    <img
      alt="Glide"
      src="images/glide.png"
      style={
        Object {
          "height": "100%",
          "width": "100%",
        }
      }
    />
  </div>
  <div
    className="progress"
    style={Object {}}
  >
    <div
      aria-valuemax={100}
      aria-valuemin={0}
      aria-valuenow={100}
      className="progress-bar bg-success"
      role="progressbar"
      style={
        Object {
          "width": "100%",
        }
      }
    />
  </div>
</div>
`;

exports[`Storyshots Elabox/components/AppIcon Downloadable 1`] = `
<div
  style={
    Object {
      "height": "200px",
      "textAlign": "center",
      "width": "200px",
    }
  }
>
  <div
    style={
      Object {
        "border": "3px solid black",
        "borderRadius": "20px",
        "marginBottom": "10px",
        "padding": "20px",
        "position": "relative",
      }
    }
  >
    <img
      alt="Glide"
      src="images/glide.png"
      style={
        Object {
          "height": "100%",
          "width": "100%",
        }
      }
    />
    <svg
      fill="none"
      height={20}
      stroke="blue"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
      style={
        Object {
          "bottom": 10,
          "cursor": "pointer",
          "position": "absolute",
          "right": 10,
        }
      }
      viewBox="0 0 24 24"
      width={20}
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
      />
      <polyline
        points="7 10 12 15 17 10"
      />
      <line
        x1="12"
        x2="12"
        y1="15"
        y2="3"
      />
    </svg>
  </div>
  <h3>
    Glide
  </h3>
</div>
`;

exports[`Storyshots Elabox/components/AppIcon Downloading 1`] = `
<div
  style={
    Object {
      "height": "200px",
      "textAlign": "center",
      "width": "200px",
    }
  }
>
  <div
    style={
      Object {
        "border": "3px solid black",
        "borderRadius": "20px",
        "marginBottom": "10px",
        "padding": "20px",
        "position": "relative",
      }
    }
  >
    <img
      alt="Glide"
      src="images/glide.png"
      style={
        Object {
          "height": "100%",
          "width": "100%",
        }
      }
    />
  </div>
  <div
    className="progress"
    style={Object {}}
  >
    <div
      aria-valuemax={100}
      aria-valuemin={0}
      aria-valuenow={50}
      className="progress-bar progress-bar-animated bg-primary progress-bar-striped"
      role="progressbar"
      style={
        Object {
          "width": "50%",
        }
      }
    />
  </div>
</div>
`;

exports[`Storyshots Elabox/components/AppIcon With Label 1`] = `
<div
  style={
    Object {
      "height": "200px",
      "textAlign": "center",
      "width": "200px",
    }
  }
>
  <div
    style={
      Object {
        "border": "3px solid black",
        "borderRadius": "20px",
        "marginBottom": "10px",
        "padding": "20px",
        "position": "relative",
      }
    }
  >
    <img
      alt="Glide"
      src="images/glide.png"
      style={
        Object {
          "height": "100%",
          "width": "100%",
        }
      }
    />
  </div>
  <h3>
    Glide
  </h3>
</div>
`;

exports[`Storyshots Elabox/components/AppIcon Without Label 1`] = `
<div
  style={
    Object {
      "height": "200px",
      "textAlign": "center",
      "width": "200px",
    }
  }
>
  <div
    style={
      Object {
        "border": "3px solid black",
        "borderRadius": "20px",
        "marginBottom": "10px",
        "padding": "20px",
        "position": "relative",
      }
    }
  >
    <img
      alt="Glide"
      src="images/glide.png"
      style={
        Object {
          "height": "100%",
          "width": "100%",
        }
      }
    />
  </div>
</div>
`;

exports[`Storyshots Example/Button Large 1`] = `
<button
  className="storybook-button storybook-button--large storybook-button--secondary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Primary 1`] = `
<button
  className="storybook-button storybook-button--medium storybook-button--primary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  cvb
</button>
`;

exports[`Storyshots Example/Button Secondary 1`] = `
<button
  className="storybook-button storybook-button--medium storybook-button--secondary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Small 1`] = `
<button
  className="storybook-button storybook-button--small storybook-button--secondary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Header Logged In 1`] = `
<header>
  <div
    className="wrapper"
  >
    <div>
      <svg
        height="32"
        viewBox="0 0 32 32"
        width="32"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
            fill="#FFF"
          />
          <path
            d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
            fill="#555AB9"
          />
          <path
            d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
            fill="#91BAF8"
          />
        </g>
      </svg>
      <h1>
        Acme
      </h1>
    </div>
    <div>
      <span
        className="welcome"
      >
        Welcome, 
        <b>
          Jane Doe
        </b>
        !
      </span>
      <button
        className="storybook-button storybook-button--small storybook-button--secondary"
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
        type="button"
      >
        Log out
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Example/Header Logged Out 1`] = `
<header>
  <div
    className="wrapper"
  >
    <div>
      <svg
        height="32"
        viewBox="0 0 32 32"
        width="32"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
            fill="#FFF"
          />
          <path
            d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
            fill="#555AB9"
          />
          <path
            d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
            fill="#91BAF8"
          />
        </g>
      </svg>
      <h1>
        Acme
      </h1>
    </div>
    <div>
      <button
        className="storybook-button storybook-button--small storybook-button--secondary"
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
        type="button"
      >
        Log in
      </button>
      <button
        className="storybook-button storybook-button--small storybook-button--primary"
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
        type="button"
      >
        Sign up
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Example/Page Logged In 1`] = `
<article>
  <header>
    <div
      className="wrapper"
    >
      <div>
        <svg
          height="32"
          viewBox="0 0 32 32"
          width="32"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <path
              d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
              fill="#FFF"
            />
            <path
              d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
              fill="#555AB9"
            />
            <path
              d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
              fill="#91BAF8"
            />
          </g>
        </svg>
        <h1>
          Acme
        </h1>
      </div>
      <div>
        <button
          className="storybook-button storybook-button--small storybook-button--secondary"
          onClick={[Function]}
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
          type="button"
        >
          Log in
        </button>
        <button
          className="storybook-button storybook-button--small storybook-button--primary"
          onClick={[Function]}
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
          type="button"
        >
          Sign up
        </button>
      </div>
    </div>
  </header>
  <section>
    <h2>
      Pages in Storybook
    </h2>
    <p>
      We recommend building UIs with a
       
      <a
        href="https://componentdriven.org"
        rel="noopener noreferrer"
        target="_blank"
      >
        <strong>
          component-driven
        </strong>
      </a>
       
      process starting with atomic components and ending with pages.
    </p>
    <p>
      Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:
    </p>
    <ul>
      <li>
        Use a higher-level connected component. Storybook helps you compose such data from the "args" of child component stories
      </li>
      <li>
        Assemble data in the page component from your services. You can mock these services out using Storybook.
      </li>
    </ul>
    <p>
      Get a guided tutorial on component-driven development at
       
      <a
        href="https://storybook.js.org/tutorials/"
        rel="noopener noreferrer"
        target="_blank"
      >
        Storybook tutorials
      </a>
      . Read more in the
       
      <a
        href="https://storybook.js.org/docs"
        rel="noopener noreferrer"
        target="_blank"
      >
        docs
      </a>
      .
    </p>
    <div
      className="tip-wrapper"
    >
      <span
        className="tip"
      >
        Tip
      </span>
       Adjust the width of the canvas with the
       
      <svg
        height="10"
        viewBox="0 0 12 12"
        width="10"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"
            fill="#999"
            id="a"
          />
        </g>
      </svg>
      Viewports addon in the toolbar
    </div>
  </section>
</article>
`;

exports[`Storyshots Example/Page Logged Out 1`] = `
<article>
  <header>
    <div
      className="wrapper"
    >
      <div>
        <svg
          height="32"
          viewBox="0 0 32 32"
          width="32"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <path
              d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
              fill="#FFF"
            />
            <path
              d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
              fill="#555AB9"
            />
            <path
              d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
              fill="#91BAF8"
            />
          </g>
        </svg>
        <h1>
          Acme
        </h1>
      </div>
      <div>
        <button
          className="storybook-button storybook-button--small storybook-button--secondary"
          onClick={[Function]}
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
          type="button"
        >
          Log in
        </button>
        <button
          className="storybook-button storybook-button--small storybook-button--primary"
          onClick={[Function]}
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
          type="button"
        >
          Sign up
        </button>
      </div>
    </div>
  </header>
  <section>
    <h2>
      Pages in Storybook
    </h2>
    <p>
      We recommend building UIs with a
       
      <a
        href="https://componentdriven.org"
        rel="noopener noreferrer"
        target="_blank"
      >
        <strong>
          component-driven
        </strong>
      </a>
       
      process starting with atomic components and ending with pages.
    </p>
    <p>
      Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:
    </p>
    <ul>
      <li>
        Use a higher-level connected component. Storybook helps you compose such data from the "args" of child component stories
      </li>
      <li>
        Assemble data in the page component from your services. You can mock these services out using Storybook.
      </li>
    </ul>
    <p>
      Get a guided tutorial on component-driven development at
       
      <a
        href="https://storybook.js.org/tutorials/"
        rel="noopener noreferrer"
        target="_blank"
      >
        Storybook tutorials
      </a>
      . Read more in the
       
      <a
        href="https://storybook.js.org/docs"
        rel="noopener noreferrer"
        target="_blank"
      >
        docs
      </a>
      .
    </p>
    <div
      className="tip-wrapper"
    >
      <span
        className="tip"
      >
        Tip
      </span>
       Adjust the width of the canvas with the
       
      <svg
        height="10"
        viewBox="0 0 12 12"
        width="10"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"
            fill="#999"
            id="a"
          />
        </g>
      </svg>
      Viewports addon in the toolbar
    </div>
  </section>
</article>
`;
